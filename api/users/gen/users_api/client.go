// Code generated by goa v3.2.6, DO NOT EDIT.
//
// usersAPI client
//
// Command:
// $ goa gen github.com/enkhalifapro/users-serverless/internal/users/api/design
// -o ./api/users

package usersapi

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "usersAPI" service client.
type Client struct {
	AddEndpoint goa.Endpoint
	GetEndpoint goa.Endpoint
}

// NewClient initializes a "usersAPI" service client given the endpoints.
func NewClient(add, get goa.Endpoint) *Client {
	return &Client{
		AddEndpoint: add,
		GetEndpoint: get,
	}
}

// Add calls the "add" endpoint of the "usersAPI" service.
// Add may return the following errors:
//	- "InternalError" (type *goa.ServiceError)
//	- error: internal error
func (c *Client) Add(ctx context.Context, p *User) (err error) {
	_, err = c.AddEndpoint(ctx, p)
	return
}

// Get calls the "get" endpoint of the "usersAPI" service.
// Get may return the following errors:
//	- "InternalError" (type *goa.ServiceError)
//	- error: internal error
func (c *Client) Get(ctx context.Context, p *GetPayload) (res *User, err error) {
	var ires interface{}
	ires, err = c.GetEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*User), nil
}
